/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.dynamics;

import org.dynamics.db.Db;
import org.dynamics.db.LevelDb;
import org.dynamics.model.Person;
import org.dynamics.reader.CsvFileReader;
import org.dynamics.reader.Reader;
import org.dynamics.ui.BouteFrame;
import org.dynamics.ui.CommonFrame;
import org.dynamics.ui.FindFrame;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDateTime;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

public class Library  extends CommonFrame {
    private Map<String, Map<String, ActionListener>> men = new LinkedHashMap<>();
    private Map<String, ActionListener> fileMenuItems = new LinkedHashMap<>();
    private Map<String, ActionListener> bouteMenuItems = new LinkedHashMap<>();
    private Map<String, ActionListener> searchMenuItems = new LinkedHashMap<>();
    private Db db = new LevelDb();
    public Library(String title) throws UnsupportedLookAndFeelException, ClassNotFoundException, InstantiationException, IllegalAccessException, IOException {
        super(title);
        searchMenuItems.put("Find",(ActionEvent e)->{
            try {
                JComboBox<String> comboBox = comboBox(db.keyFilterBy("File_"));
                confirmation("hello",()->comboBox);
                String keySelected = comboBox.getSelectedItem().toString();
                if(keySelected!= null || keySelected!=""){
                    List<Person> persons = db.find(keySelected);
                    FindFrame findFrame = new FindFrame("Find",persons);
                    findFrame.northpanel();
                    findFrame.addDetails(db);
                    findFrame.southPanel();
                }else {
                    alert("File not selected");
                }
            } catch (Exception ex) {
                ex.printStackTrace();
                alert(ex.getMessage());
            }
        });
        bouteMenuItems.put("Bout",(ActionEvent e)->{
            try {
                BouteFrame bouteFrame = new BouteFrame("Bout List",db);
                bouteFrame.northPanel();
                bouteFrame.centerPanel();
            } catch (Exception ex) {
                ex.printStackTrace();
                alert(ex.getMessage());
            }

        });
        fileMenuItems.put("Import",(ActionEvent e)->{
            try {
                fileChooser().ifPresent(filePath->{
                    Reader<Person> reader = null;
                    try {
                        reader = new CsvFileReader(filePath);
                        List<Person> persons =  reader.read();
                        String key = Paths.get(filePath).getFileName().toString().concat("_"+LocalDateTime.now().toString());
                        db.insert("File_"+key,persons);
                        alert("Total : "+persons.size()+" Uploaded Successfully...!");
                    } catch (Exception ex) {
                        ex.printStackTrace();
                        alert(ex.getMessage());
                    }
                });

            } catch (Exception ex) {
                ex.printStackTrace();
                alert(ex.getMessage());
            }
        });
        men.put("File", fileMenuItems);
        men.put("Bout", bouteMenuItems);
        men.put("Search", searchMenuItems);
        super.menuBar(men);
    }
    public static void main(String args[]) throws UnsupportedLookAndFeelException, ClassNotFoundException, InstantiationException, IllegalAccessException, IOException {
        Library library = new Library("Dynamcis 101 MMA");
    }
}
